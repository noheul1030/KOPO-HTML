/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-06-02 14:08:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.JSPDB;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import javax.sql.*;
import java.io.*;
import java.util.*;
import java.net.*;

public final class showREC_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.net");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.sql");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<meta http-equiv = \"Content-Type\" content = \"text/html; charset = utf-8\" />\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write(" <!--java import-->\r\n");
      out.write("<html>\r\n");
      out.write("    <head>\r\n");
      out.write("    	<meta charset=\"UTF-8\"> <!--인코딩 설정 UTF-8-->\r\n");
      out.write("    	<style>\r\n");
      out.write("    		@font-face {\r\n");
      out.write("                    font-family: \"D2CodingLigature\";\r\n");
      out.write("                    src: url(./D2CodingLigature/D2CodingBold-Ver1.3.2-20180524-ligature.ttf) format(\"truetype\");\r\n");
      out.write("                    font-weight: normal;\r\n");
      out.write("                }\r\n");
      out.write("                /*body 폰트 지정*/\r\n");
      out.write("                body{\r\n");
      out.write("                    font-family: 'D2CodingLigature',serif;\r\n");
      out.write("                }\r\n");
      out.write("		  table {\r\n");
      out.write("		    border-collapse: collapse;\r\n");
      out.write("		    width : 75%;\r\n");
      out.write("		  }\r\n");
      out.write("		  th, td {\r\n");
      out.write("		    border-bottom: 1px solid #444444;\r\n");
      out.write("		    padding: 10px;\r\n");
      out.write("		  }\r\n");
      out.write("		  th:first-child, td:first-child {\r\n");
      out.write("		    border-left: none;\r\n");
      out.write("		  }\r\n");
      out.write("		\r\n");
      out.write("		.fourth {\r\n");
      out.write("		  background: gold;\r\n");
      out.write("		  border-color: white;\r\n");
      out.write("		  color: black;\r\n");
      out.write("		  background-image: linear-gradient(45deg, yellow 50%, transparent 50%);\r\n");
      out.write("		  background-position: 100%;\r\n");
      out.write("		  background-size: 400%;\r\n");
      out.write("		  transition: background 300ms ease-in-out;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.fourth:hover {\r\n");
      out.write("		  background-position: 0;\r\n");
      out.write("		}\r\n");
      out.write("		input{\r\n");
      out.write("			width: 200px; \r\n");
      out.write("			height: 40px; \r\n");
      out.write("			padding: 0px;\r\n");
      out.write("		}\r\n");
      out.write("		p{\r\n");
      out.write("		text-align: center;}\r\n");
      out.write("		</style>\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("    <h1 align = center>성적 조회 후 정정 / 삭제</h1>\r\n");
      out.write(" ");
    
 	try{
		//DB연동 
        Class.forName("com.mysql.jdbc.Driver");
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/noheul","root","shdmf1030@");
        //Connection conn = DriverManager.getConnection("jdbc:mysql://192.168.23.60:3307/kopo11","root","shdmf1030@");
        Statement stmt = conn.createStatement();
        
        request.setCharacterEncoding("utf-8");
        String searchID = request.getParameter("searchID");
        String query = String.format("SELECT CASE WHEN EXISTS(SELECT * FROM jspDB WHERE studentID = %s) THEN 1 ELSE 0 END", searchID);
        ResultSet resultSet = stmt.executeQuery(query);

        while (resultSet.next()) {
            if (resultSet.getInt(1) == 1) {
                String existQuery = String.format("SELECT * FROM jspDB WHERE studentID = %s", searchID);
                ResultSet existResultSet = stmt.executeQuery(existQuery);

                String name = "";
                int studentID = 0;
                int kor = 0;
                int eng = 0;
                int mat = 0;
                
                
                while (existResultSet.next()) {
                    name = existResultSet.getString("name");
                    studentID = existResultSet.getInt("studentid");
                    kor = existResultSet.getInt("kor");
                    eng = existResultSet.getInt("eng");
                    mat = existResultSet.getInt("mat");
                    // 이후 작업 수행
                }   

      out.write("			<form method = 'post' action = 'showREC.jsp'>\r\n");
      out.write("				<table cellspacing=\"1\" width=\"400\"  align=\"center\" >\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td width = 25% style=\"table-layout: fixed;\"><p style = \"font-weight: bold;\">조회할 학번</p></td>\r\n");
      out.write("						<td width = 300><p>\r\n");
      out.write("						<input type=\"text\" pattern=\"^(?:100000000|[1-9][0-9]{0,8}?|0)$\" name='searchID' \r\n");
      out.write("						value='' title=\"0~100000000까지의 정수를 입력하세요\" required style=\"font-weight: bold;\"></p></td>\r\n");
      out.write("		  				<td><input class=\"fourth\" type=\"submit\" value=\"조회\" style=\"width: 70px;font-weight: bold;\"></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("			</form>\r\n");
      out.write("				</table>\r\n");
      out.write("	       	<form method = 'post'>\r\n");
      out.write("       			<table cellspacing=\"1\" width=\"400\" align=\"center\" >\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td bgcolor=\"gold\" width=\"100\" style=\"border-right: 1px solid #444444;\"><p><strong>이름</strong></p></td>\r\n");
      out.write("						<td width = 300 style=\"border-left: 1px solid #444444;\"><p><input type='text' name=\"name\" value='");
      out.print(name);
      out.write("' readonly></p></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("						<td bgcolor=\"gold\" width=\"100\" style=\"border-right: 1px solid #444444;\"><p><strong>학번</strong></p></td>\r\n");
      out.write("						<td width = 300 style=\"border-left: 1px solid #444444;\"><p><input type='text' name=\"searchID\" value='");
      out.print(searchID);
      out.write("' readonly></p></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("						<td bgcolor=\"gold\" width=\"100\" style=\"border-right: 1px solid #444444;\"><p><strong>국어</strong></p></td>\r\n");
      out.write("						<td width = 300 style=\"border-left: 1px solid #444444;\"><p><input type='text' pattern=\"^(?:100|[1-9][0-9]?|0)$\" name=\"korean\" value='");
      out.print(kor);
      out.write("' title=\"0에서 100사이 숫자를 입력하세요.\" required></p></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("						<td bgcolor=\"gold\" width=\"100\" style=\"border-right: 1px solid #444444;\"><p><strong>영어</strong></td>\r\n");
      out.write("						<td width = 300 style=\"border-left: 1px solid #444444;\"><p><input type='text' pattern=\"^(?:100|[1-9][0-9]?|0)$\" name=\"english\" value='");
      out.print(eng);
      out.write("' title=\"0에서 100사이 숫자를 입력하세요.\" required></p></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("						<td bgcolor=\"gold\" width=\"100\" style=\"border-right: 1px solid #444444;\"><p><strong>수학</strong></p></td>\r\n");
      out.write("						<td width = 300 style=\"border-left: 1px solid #444444;\"><p><input type='text' pattern=\"^(?:100|[1-9][0-9]?|0)$\" name=\"mathmatic\" value='");
      out.print(mat);
      out.write("' title=\"0에서 100사이 숫자를 입력하세요.\" required></p></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</table>\r\n");
      out.write("       			\r\n");
      out.write("       			<table cellspacing=\"1\" width=\"600\" border=\"0\" align=\"center\" style=\"border-collapse: collapse;\">\r\n");
      out.write("       				<tr>\r\n");
      out.write("       					<td align=\"center\">\r\n");
      out.write("       	  				<input class=\"fourth\" type=\"submit\" value=\"수정\" style=\"width: 70px; height: 40px; padding: 0px;font-weight: bold;\" formaction = 'updateDB.jsp'></td>\r\n");
      out.write("       					<td align=\"center\">\r\n");
      out.write("       	  				<input class=\"fourth\" type=\"submit\" value=\"삭제\" style=\"width: 70px; height: 40px; padding: 0px;font-weight: bold;\" formaction = 'deleteDB.jsp'></td>\r\n");
      out.write("       				</tr>\r\n");
      out.write("       			</table>	\r\n");
      out.write("    			</form>\r\n");
        	}else if(resultSet.getInt(1) == 0){ 
      out.write("\r\n");
      out.write("			<form method = 'post' action = 'showREC.jsp'>\r\n");
      out.write("				<table cellspacing=\"1\" width=\"600\"  align=\"center\" >\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td width = 25% style=\"table-layout: fixed;\"><p style = \"font-weight: bold;\">조회할 학번</p></td>\r\n");
      out.write("						<td width = 300><p>\r\n");
      out.write("						<input type=\"text\" pattern=\"^(?:100000000|[1-9][0-9]{0,8}?|0)$\" name='searchID' \r\n");
      out.write("						value='' title=\"0~100000000까지의 정수를 입력하세요\" required style=\"font-weight: bold;\"></p></td>\r\n");
      out.write("		  				<td><input class=\"fourth\" type=\"submit\" value=\"조회\" style=\"width: 70px;font-weight: bold;\"></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("			</form>\r\n");
      out.write("				</table>\r\n");
      out.write("       			<table cellspacing=\"1\" width=\"600\" align=\"center\" >\r\n");
      out.write("       				<tr>\r\n");
      out.write("       					<td bgcolor=\"gold\" width=25% style=\"border-right: 1px solid #444444;table-layout: fixed;\"><p><strong>이름</strong></p></td>\r\n");
      out.write("       					<td width = 300 style=\"border-left: 1px solid #444444;\"><p><input value='해당학번 없음'></p></td>\r\n");
      out.write("       					<td></td>\r\n");
      out.write("       				</tr>\r\n");
      out.write("       					<td bgcolor=\"gold\" width=25% style=\"border-right: 1px solid #444444;table-layout: fixed;\"><p><strong>학번</strong></p></td>\r\n");
      out.write("       					<td width = 300 style=\"border-left: 1px solid #444444;\"><p><input value=''></p></td>\r\n");
      out.write("       					<td></td>\r\n");
      out.write("       				</tr>\r\n");
      out.write("       					<td bgcolor=\"gold\" width=25% style=\"border-right: 1px solid #444444;table-layout: fixed;\"><p><strong>국어</strong></p></td>\r\n");
      out.write("       					<td width = 300 style=\"border-left: 1px solid #444444;\"><p><input value=''></p></td>\r\n");
      out.write("       					<td></td>\r\n");
      out.write("       				</tr>\r\n");
      out.write("       					<td bgcolor=\"gold\" width=25% style=\"border-right: 1px solid #444444;table-layout: fixed;\"><p><strong>영어</strong></td>\r\n");
      out.write("       					<td width = 300 style=\"border-left: 1px solid #444444;\"><p><input value=''></p></td>\r\n");
      out.write("       					<td></td>\r\n");
      out.write("       				</tr>\r\n");
      out.write("       					<td bgcolor=\"gold\" width=25% style=\"border-right: 1px solid #444444;table-layout: fixed;\"><p><strong>수학</strong></p></td>\r\n");
      out.write("       					<td width = 300 style=\"border-left: 1px solid #444444;\"><p><input value=''></p></td>\r\n");
      out.write("       					<td></td>\r\n");
      out.write("       				</tr>\r\n");
      out.write("       			</table>\r\n");
      out.write("       			\r\n");
        	}
        }
        
		stmt.close(); 
		conn.close(); 
	
	}catch(Exception e) {
		System.out.println(e);
		e.printStackTrace();
	}
 

      out.write("\r\n");
      out.write("		\r\n");
      out.write("    </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
