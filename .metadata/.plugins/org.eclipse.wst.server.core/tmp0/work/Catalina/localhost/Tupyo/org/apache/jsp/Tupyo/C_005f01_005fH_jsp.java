/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-06-04 15:34:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Tupyo;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import java.sql.*;

public final class C_005f01_005fH_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<meta http-equiv = \"Content-Type\" content = \"text/html; charset = utf-8\" />\r\n");
      out.write(" \r\n");
      out.write(" <!--java import-->\r\n");
      out.write(" <!--java import-->\r\n");
      out.write(" <!--java import-->\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		<title>개표결과 C_01_H.jsp</title>\r\n");
      out.write("		<style>\r\n");
      out.write("    		table {\r\n");
      out.write("    			text-align: center; \r\n");
      out.write("   				border: 1; \r\n");
      out.write("   				solid black; \r\n");
      out.write("   				width: 600px; \r\n");
      out.write("   				border-collapse: collapse;\r\n");
      out.write("   				cellspacing=\"1\"}\r\n");
      out.write("   			td{ }\r\n");
      out.write("    		a {text-decoration-line: none;  color: #696969;}\r\n");
      out.write("    		a:hover {\r\n");
      out.write("				background-color: gold;\r\n");
      out.write("				border-color: white;\r\n");
      out.write("				color: #696969;\r\n");
      out.write("				font-size : 16px;\r\n");
      out.write("				font-weight: bold; /* 글자 굵게 설정 */\r\n");
      out.write("				background-image: linear-gradient(45deg, white 50%, transparent 50%);\r\n");
      out.write("				background-position: 100%;\r\n");
      out.write("				background-size: 400%;\r\n");
      out.write("				transition: background 300ms ease-in-out;\r\n");
      out.write("			}\r\n");
      out.write("			h2:hover {\r\n");
      out.write("			 box-shadow: 0 0 40px 40px #ffd700 inset;\r\n");
      out.write("			}\r\n");
      out.write("			.tr:hover {\r\n");
      out.write("				box-shadow: 0 0 40px 40px #f5f5f5 inset;\r\n");
      out.write("			}\r\n");
      out.write("    		h1,h2,h4 {margin-top: 15px; text-align: center;}\r\n");
      out.write("    		.fourth {\r\n");
      out.write("			  background: gold;\r\n");
      out.write("			  border-color: white;\r\n");
      out.write("			  color: black;\r\n");
      out.write("			  background-image: linear-gradient(45deg, yellow 50%, transparent 50%);\r\n");
      out.write("			  background-position: 100%;\r\n");
      out.write("			  background-size: 400%;\r\n");
      out.write("			  transition: background 300ms ease-in-out;\r\n");
      out.write("			  border-radius: 5px;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			.fourth:hover {\r\n");
      out.write("			  background-position: 0;\r\n");
      out.write("			}\r\n");
      out.write("			.check{\r\n");
      out.write("				box-shadow: 0 0 40px 40px #ffd700 inset;\r\n");
      out.write("			}\r\n");
      out.write("    	</style>\r\n");
      out.write("	</head>\r\n");
      out.write("	<body>\r\n");

		//DB연동 
		Class.forName("com.mysql.jdbc.Driver");
		//Connection conn = DriverManager.getConnection("jdbc:mysql://192.168.23.60:3307/kopo11","root","shdmf1030@");
		Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/noheul","root","shdmf1030@");
		Statement stmt = conn.createStatement();
				 
		// 전체 후보 수 조회
        ResultSet huboCNT = stmt.executeQuery("select count(*) from huboDB");
        String cnt = "";
        while(huboCNT.next()){
        	cnt = huboCNT.getString(1);
        }
        
        String TupyoTotalQuery = String.format("SELECT hubo AS 후보,count(hubo)-1 as 득표수,(count(hubo)-1) / (SELECT COUNT(*)-%s FROM TupyoDB) * 100 AS 득표율 FROM TupyoDB GROUP BY hubo;",cnt);
        ResultSet rset = stmt.executeQuery(TupyoTotalQuery);
		        

      out.write("\r\n");
      out.write("		<table>\r\n");
      out.write("    		<tr>\r\n");
      out.write("    			<td width = 25%><a align = center id=\"update\" href=\"A_01_H.jsp\" target=\"content\"><h2>후보등록</h2></a></td>\r\n");
      out.write("    			<td width = 25%><a align = center id=\"vote\" href=\"B_01_H.jsp\" target=\"content\"><h2>투표</h2></a></td>\r\n");
      out.write("    			<td width = 25%><a align = center id=\"result\" href=\"C_01_H.jsp\" target=\"content\"><h2 class=\"check\">개표결과</h2></a></td>\r\n");
      out.write("    			<td width = 25%><a align = center id=\"result\" href=\"D_01_H.jsp\" target=\"content\"><h2>초기화</h2></a></td>\r\n");
      out.write("    		</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("		<table>\r\n");
      out.write("			<tr><td colspan = 2 style=\"border-bottom: none;\"><h1 align = left >후보별 득표 결과</h1></td></tr>\r\n");
      out.write("		</table>\r\n");
      out.write("		\r\n");
      out.write("		<form method=\"post\">\r\n");
      out.write("		<table border = 1>\r\n");
		
		while(rset.next()){ 
			int var = rset.getInt(2);
			float rate = ((float)((int)(var * 10000)) / 100);

      out.write("\r\n");
      out.write("			<tr class=\"tr\">\r\n");
      out.write("				<td width = '20%'><p align=center><a href='C_02_H.jsp?key=");
      out.print(rset.getString(1));
      out.write('\'');
      out.write('>');
      out.print(rset.getString(1));
      out.write("</a></p></td>\r\n");
      out.write("				\r\n");
      out.write("				<td><img src='bar.PNG' align = left width='");
      out.print(rate * 5 / 100);
      out.write("%' height = 25px>");
      out.print(rset.getInt(2));
      out.write('표');
      out.write('(');
      out.print(rset.getFloat(3));
      out.write("%)</td>\r\n");
      out.write("\r\n");
      out.write("			</tr>\r\n");
		} 
      out.write("\r\n");
      out.write("		</table>\r\n");
      out.write("		</form>\r\n");
      out.write("	</body>\r\n");
      out.write("</html>\r\n");
      out.write("	");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
