/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-06-03 11:54:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.TupyoDB;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import javax.net.*;
import java.io.*;
import java.util.*;

public final class intro_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.net");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<meta language = \"java\" http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" <!--java import-->\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		<title>intro</title>\r\n");
      out.write("		<style>\r\n");
      out.write("		    ul {\r\n");
      out.write("		        list-style-type: disc;\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    li {\r\n");
      out.write("		        margin: 30px;\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    a {\r\n");
      out.write("		        text-decoration-line: none;\r\n");
      out.write("		\r\n");
      out.write("		        /*   text-decoration-line: underline; */\r\n");
      out.write("		        /*   text-decoration-line: overline; */\r\n");
      out.write("		        /*   text-decoration-line: line-through; */\r\n");
      out.write("		        /*   text-decoration-line: underline line-through overline; */\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    a {\r\n");
      out.write("		        text-decoration: none;\r\n");
      out.write("		        color: black;\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    a:visited {\r\n");
      out.write("		        text-decoration: none;\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    a:hover {\r\n");
      out.write("		        text-decoration: none;\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    a:focus {\r\n");
      out.write("		        text-decoration: none;\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    a:hover,\r\n");
      out.write("		    a:active {\r\n");
      out.write("		        text-decoration: none;\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    .blinking-text {\r\n");
      out.write("		        animation: blink 0.1s linear infinite;\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    @keyframes blink {\r\n");
      out.write("		        0% {\r\n");
      out.write("		            opacity: 1;\r\n");
      out.write("		        }\r\n");
      out.write("		\r\n");
      out.write("		        50% {\r\n");
      out.write("		            opacity: 0;\r\n");
      out.write("		        }\r\n");
      out.write("		\r\n");
      out.write("		        100% {\r\n");
      out.write("		            opacity: 1;\r\n");
      out.write("		        }\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    .rainbow-text {\r\n");
      out.write("		        animation: rainbow-blink 0.3s linear infinite;\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    @keyframes rainbow-blink {\r\n");
      out.write("		        0% {\r\n");
      out.write("		            color: red;\r\n");
      out.write("		        }\r\n");
      out.write("		\r\n");
      out.write("		        16.7% {\r\n");
      out.write("		            color: orange;\r\n");
      out.write("		        }\r\n");
      out.write("		\r\n");
      out.write("		        33.3% {\r\n");
      out.write("		            color: yellow;\r\n");
      out.write("		        }\r\n");
      out.write("		\r\n");
      out.write("		        50% {\r\n");
      out.write("		            color: green;\r\n");
      out.write("		        }\r\n");
      out.write("		\r\n");
      out.write("		        66.7% {\r\n");
      out.write("		            color: blue;\r\n");
      out.write("		        }\r\n");
      out.write("		\r\n");
      out.write("		        83.3% {\r\n");
      out.write("		            color: indigo;\r\n");
      out.write("		        }\r\n");
      out.write("		\r\n");
      out.write("		        100% {\r\n");
      out.write("		            color: violet;\r\n");
      out.write("		        }\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    @keyframes blink {\r\n");
      out.write("		        0% {\r\n");
      out.write("		            opacity: 1;\r\n");
      out.write("		        }\r\n");
      out.write("		\r\n");
      out.write("		        50% {\r\n");
      out.write("		            opacity: 0;\r\n");
      out.write("		        }\r\n");
      out.write("		\r\n");
      out.write("		        100% {\r\n");
      out.write("		            opacity: 1;\r\n");
      out.write("		        }\r\n");
      out.write("		\r\n");
      out.write("		        html,\r\n");
      out.write("		        body {\r\n");
      out.write("		            margin: 0;\r\n");
      out.write("		            padding: 0;\r\n");
      out.write("		            width: 100%;\r\n");
      out.write("		            height: 100%;\r\n");
      out.write("		            display: table;\r\n");
      out.write("		            background-color: black;\r\n");
      out.write("		            \r\n");
      out.write("		        }\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    @font-face {\r\n");
      out.write("		        font-family: neon;\r\n");
      out.write("		        src: url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/707108/neon.ttf);\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    .container {\r\n");
      out.write("		        display: table-cell;\r\n");
      out.write("		        text-align: center;\r\n");
      out.write("		        vertical-align: middle;\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    .neon {\r\n");
      out.write("		        font-family: neon;\r\n");
      out.write("		        color: #FB4264;\r\n");
      out.write("		        font-size: 3vw;\r\n");
      out.write("		        line-height: 3vw;\r\n");
      out.write("		        text-shadow: 0 0 1vw #F40A35;\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    .flux {\r\n");
      out.write("		        font-family: neon;\r\n");
      out.write("		        color: #426DFB;\r\n");
      out.write("		        font-size: 3vw;\r\n");
      out.write("		        line-height: 3vw;\r\n");
      out.write("		        text-shadow: 0 0 1vw #2356FF;\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    .neon {\r\n");
      out.write("		        animation: neon 1s ease infinite;\r\n");
      out.write("		        -moz-animation: neon 1s ease infinite;\r\n");
      out.write("		        -webkit-animation: neon 1s ease infinite;\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    @keyframes neon {\r\n");
      out.write("		\r\n");
      out.write("		        0%,\r\n");
      out.write("		        100% {\r\n");
      out.write("		            text-shadow: 0 0 1vw #FA1C16, 0 0 3vw #FA1C16, 0 0 10vw #FA1C16, 0 0 10vw #FA1C16, 0 0 .4vw #FED128, .5vw .5vw .1vw #806914;\r\n");
      out.write("		            color: #FED128;\r\n");
      out.write("		        }\r\n");
      out.write("		\r\n");
      out.write("		        50% {\r\n");
      out.write("		            text-shadow: 0 0 .5vw #800E0B, 0 0 1.5vw #800E0B, 0 0 5vw #800E0B, 0 0 5vw #800E0B, 0 0 .2vw #800E0B, .5vw .5vw .1vw #40340A;\r\n");
      out.write("		            color: #806914;\r\n");
      out.write("		        }\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    .flux {\r\n");
      out.write("		        animation: flux 2s linear infinite;\r\n");
      out.write("		        -moz-animation: flux 2s linear infinite;\r\n");
      out.write("		        -webkit-animation: flux 2s linear infinite;\r\n");
      out.write("		        -o-animation: flux 2s linear infinite;\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    @keyframes flux {\r\n");
      out.write("		\r\n");
      out.write("		        0%,\r\n");
      out.write("		        100% {\r\n");
      out.write("		            text-shadow: 0 0 1vw #1041FF, 0 0 3vw #1041FF, 0 0 10vw #1041FF, 0 0 10vw #1041FF, 0 0 .4vw #8BFDFE, .5vw .5vw .1vw #147280;\r\n");
      out.write("		            color: #28D7FE;\r\n");
      out.write("		        }\r\n");
      out.write("		\r\n");
      out.write("		        50% {\r\n");
      out.write("		            text-shadow: 0 0 .5vw #082180, 0 0 1.5vw #082180, 0 0 5vw #082180, 0 0 5vw #082180, 0 0 .2vw #082180, .5vw .5vw .1vw #0A3940;\r\n");
      out.write("		            color: #146C80;\r\n");
      out.write("		        }\r\n");
      out.write("		    }\r\n");
      out.write("		    #fixed {\r\n");
      out.write("		            position: fixed;\r\n");
      out.write("		            bottom: -10px;\r\n");
      out.write("		            right: 0px;\r\n");
      out.write("		            width: 0px;\r\n");
      out.write("		            padding: 0px;\r\n");
      out.write("		            \r\n");
      out.write("	        }\r\n");
      out.write("	       \r\n");
      out.write("	</style>\r\n");
      out.write("	\r\n");
      out.write("	</head>\r\n");
      out.write("	<body>\r\n");
      out.write("		\r\n");
      out.write("		<h1 align = center>후보자 등록 홈페이지</h1>\r\n");
      out.write("		<br><br>\r\n");
      out.write("		<table width=150px align=center>\r\n");
      out.write("	        <tr>\r\n");
      out.write("	            <td width=50% align=center class=\"neon\">과제</td>\r\n");
      out.write("	            <td width=50% align=center class=\"flux\">검사</td>\r\n");
      out.write("	        </tr>\r\n");
      out.write("	        <tr>\r\n");
      out.write("	            <td colspan=2 class=\"rainbow-text\">***************************</td>\r\n");
      out.write("	        </tr>\r\n");
      out.write("	        <tr>\r\n");
      out.write("	            <td colspan=2 align=center class=\"rainbow-text\">과!제!검!사!</td>\r\n");
      out.write("	        </tr>\r\n");
      out.write("	        <tr>\r\n");
      out.write("	            <td colspan=2 align=center><img \r\n");
      out.write("	                    src=\"https://media.tenor.com/PK95lqgvj4kAAAAC/%EC%8B%A0%EB%82%98%EB%8A%94%EB%86%8D%EB%8B%B4%EA%B3%B0-%EC%A0%95%EC%8B%A0%EC%82%AC%EB%82%98%EC%9A%B4%EB%86%8D%EB%8B%B4%EA%B3%B0.gif\"\r\n");
      out.write("	                    width=180px; height=150px;></td>\r\n");
      out.write("	        </tr>\r\n");
      out.write("	        <tr>\r\n");
      out.write("	            <td colspan=2 align=center class=\"rainbow-text\">예이~</td>\r\n");
      out.write("	        </tr>\r\n");
      out.write("	        <tr>\r\n");
      out.write("	            <td colspan=2 class=\"rainbow-text\">***************************</td>\r\n");
      out.write("	        </tr>\r\n");
      out.write("	    </table>\r\n");
      out.write("	    <p align = center class=\"rainbow-text\" style=\"font-size: 25px;\">\r\n");
	    
	    String data;
	    int cnt=0;
	    try{
	    FileReader f1 = new FileReader("cnt.txt");
	    StringBuffer sb = new StringBuffer();
	    int ch = 0;
	    
	    while((ch = f1.read()) != -1){
	    	sb.append((char)ch);
	    }
	    data = sb.toString().trim().replace("\n","");
	    f1.close();
	    
	    cnt = Integer.parseInt(data);
	    cnt++;
	    data = Integer.toString(cnt);
	    out.println("<br><br>현재 홈페이지 방문자 조회수는 ["+data+"] 입니다. <br>");
	    
	    FileWriter f2 = new FileWriter("cnt.txt",false);
	    f2.write(data);
	    f2.close();
		}catch(Exception e){
		}
	    
	    try{
			// DB연동 
	        Class.forName("com.mysql.jdbc.Driver");
	        Connection conn = DriverManager.getConnection("jdbc:mysql://192.168.23.60:3307/kopo11","root","shdmf1030@");
	        Statement stmt = conn.createStatement();
	        Statement stmt2 = conn.createStatement();
			
	        stmt.execute("create table IF not exists TupyoDBcount(visitcount int);");
	        // 테이블 생성, 이름,학번,국어,영어,수학 점수 컬럼 생성
	        //stmt.execute("create table IF not exists jspDBcount(visitcount int not null);"); // 타입 int utf8로 작성 디폴트
	        ResultSet rset = stmt.executeQuery("select max(visitcount) from TupyoDBcount;");
	        
	        int count = 0;
	        if (rset.next()) {
	        	count = rset.getInt(1) + 1;
            }
	        stmt2.execute("insert into TupyoDBcount (visitcount) values (" + count + ");");
	        
	        out.println("<br><br>현재 홈페이지 방문자 조회수는 ["+count+"] 입니다. <br>");
	
	        rset.close();
	        stmt.close(); // statement 종료
	        conn.close(); // connection 종료
		}catch(Exception e){
			out.println("테이블 생성 오류입니다.\n");
			out.println(e);
		}

      out.write("\r\n");
      out.write("		</p>\r\n");
      out.write("	</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
